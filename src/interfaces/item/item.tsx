import DamageType from "../utils/damageType";
import Source from "../utils/source";
import Rarity from "./ratity";
import Property from "./property";
import Condition from "../utils/condition";
import RechargeTime from "./rechargeTime";
import Spell from "../spell/spell";
import Ability from "../utils/ability";
import ContainedItem from "./containedItem";
import Capacity from "./capacity";
import RequiresAttunementTags from "./requiresAttunementTags";

interface Item {
  name: string;
  rarity: Rarity;
  source: Source;
  type?: string;
  additionalSources?: Source[];
  otherSources?: Source[];
  ac?: number;
  acSpecial?: string;
  age?: string;
  ammunition?: boolean;
  axe?: boolean;
  carryingCapacity: number;
  damage1?: string;
  damage2?: string;
  damageType: DamageType;
  entries?: Object[];
  property?: Property[];
  range?: string;
  reload?: string;
  requireAttunement?: string | boolean;
  curse?: boolean;
  vulnerable?: DamageType[];
  resist?: DamageType[];
  immune?: DamageType[];
  conditionImmune?: Condition[];
  detail1?: string;
  spellcastingFocusType?: string;
  speed?: number;
  stealth?: boolean;
  strengthRequirement?: string;
  maxDexterityBonusForArmor?: number;
  sword?: boolean;
  firearm?: boolean;
  staff?: boolean;
  tier?: string;
  valueInCopper?: number;
  weapon?: boolean;
  weaponCategory?: string;
  weight?: number;
  wondrous?: boolean;
  tatoo?: boolean;
  sentient?: boolean;
  poison?: boolean;
  poisonTypes?: PoisonTypes;
  crewSize?: number;
  crewMin?: number;
  crewMax?: number;
  capacityPassenger?: number;
  capacityCargo?: number;
  vehicleSpeed?: number;
  vehicleAc?: number;
  vehicleHP?: number;
  vehicleDamageThreshold?: number;
  travelCostInCopper?: number; // In copper pieces per mile per passenger.
  shippingCost?: number; //In copper pieces per 100 lbs per mile.
  charges?: string | number;
  recharge?: RechargeTime | string;
  attachedSpells?: Spell[];
  abilityScoreAdjustment?: Ability[];
  focus?: string[] | boolean;
  lootTables?: string[];
  AdventureLeagueCertificateId?: string;
  bonusAC?: string;
  bonusWeapon?: string;
  bonusWeaponAttack?: string;
  bonusWeaponDamage?: string;
  bonusSpellAttack?: string;
  bonusSpellDamage?: string;
  bonusSpellSaveDc?: string;
  bonusSavingThrow?: string;
  bonusAbilityCheck?: string;
  bonusProficiencyBonus?: string;
  srd?: string | boolean;
  packContents?: ContainedItem[];
  atomicPackContents?: boolean;
  containerCapacity?: Capacity[];
  ammoType?: string;
  grantsProficiency?: boolean;
  requiresAttunementTags?: RequiresAttunementTags[];
  requiresAttunementAltTags?: RequiresAttunementTags[];
  hasFluff?: boolean;
  hasFluffImages?: boolean;
  hasRefs?: boolean;
}

export default Item;
